
Time complexity of Merge Sort is \Theta(nLogn) in all 3 cases 
(worst, average and best) as merge sort always divides the array 
in two halves and take linear time to merge two halves.

____________________________________________
3, 9, 1, 34, 9, 10, -3 |Len = 6;

-
if(0 < 5) == true
middle = (0,5)/2 = 2;
Sort(input, 0, 2).
		|
	3, 9, 1
		
		- if(0 < 2) == true
			middle = (0,2)/2 = 1;
			Sort(input, 0, 1)
					|
				  3, 9

				- if(0 < 1) == true
				middle = (0,1)/1 = 0;
				Sort(input, 0, 0)
						|
						3
				- 


